Verify your world (我要校验你的世界)
Last modified on %%mtime(%c)


%!encoding: utf-8 
%!include: {RPATH}/lib/header.t2t

+ 引子 +
曾经你我互不相识，就像两条平行线。某人天才般的引入了新的坐标平面后，平行线在无穷远处发生了“质变”，我们就神奇的认识了。外面的世界很精彩，然而精彩与危险亦是一对孪生，更何况你我浪迹在天朝。老人家老早就告诫吾辈：“防人之心不可无”。
所以，我无奈的对你说：“我要校验你的世界，这也是为了以后的精彩“。

+ 校验 +
++ 校验是什么 ++
为什么阴笑？是因为我也说不清楚。简单的概括就是，为了双发间的沟通是真实自然可信的，而需要用到的某种额外机制。大概有以下几类(复杂程度递增)：
- 错误发现： 能够发现通信的内容有错误；
- 错误纠正： 不需要对方重新参与，即可自我修复错误消息；


++ 错误发现 ++
这个级别应该是最基本的，也是应用最广泛的，别把“人”想得太坏，弄得自己人不人鬼不鬼的。毕竟，通信双方的主要任务不在于此。至于选择何种方法，需要根据你周围的环境，比如看是小偷多还是流氓多，如果是强盗多，那别选了，赶紧换地方吧。


+++ 奇偶校验 +++
最简单的校验法，1个位(bit)的额外开销。通过这个位能够知道传输过程中数据中某位是否发生了变化。

- 优点：
 - 开销小，N个位只需要一个位作为校验位(N的选择是你的问题)；
 - 检验简单： 奇校验时，数据位与校验位的1的个数加起来是奇数为正确，反之，则错误；偶校验类似；

- 缺点：
 - 仅能检测出奇数个数据位(大多时候是1)的改变，如果出现偶数个数据位发生变化时，则无能为力了；


+++ 循环冗余校验(CRC) +++
早闻其名，不见其人，今日得见，真是相见恨晚呀。为嘛有这种感觉？可能是人的天性，对看不懂的东西总有那份神秘感。


+++ 其他 +++
补充。。。


++ 错误纠正 ++
没感觉，不想写。


+ 结束语 +
上面所有非校验相关的胡说8道，看看就好，别和我认真，和不认真的人认真你也忑认真了吧：~P

上面所有提及的校验方法没有很理论，全是个人理解，如有偏差，请[PM zealccok@gmail.com]我，TIA。
