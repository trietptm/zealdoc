if { [info exists CHIPNAME] } {	
   set  _CHIPNAME $CHIPNAME    
} else {	 
   set  _CHIPNAME arm926ejs
}

if { [info exists ENDIAN] } {	
   set  _ENDIAN $ENDIAN    
} else {	 
   set  _ENDIAN little
}

#jtag scan chain
#
# The bs tap
if { [info exists BSTAPID ] } {
   set _BSTAPID $BSTAPID
}
#jtag newtap $_CHIPNAME bs  -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_BSTAPID

# The CPU tap
if { [info exists CPUTAPID ] } {
   set _CPUTAPID $CPUTAPID
} else {
   set _CPUTAPID 0x07926F0F
}
jtag newtap $_CHIPNAME cpu  -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_CPUTAPID

# The FLASH tap
if { [info exists FLASHTAPID ] } {
   set _CPUTAPID $FLASHTAPID
}
#jtag newtap $_CHIPNAME flash -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id $_FLASHTAPID

set _TARGETNAME [format "%s.cpu" $_CHIPNAME]
target create $_TARGETNAME arm926ejs -endian $_ENDIAN -chain-position $_TARGETNAME -variant arm926ejs
$_TARGETNAME configure -work-area-virt 0 -work-area-phys 0x1000000 -work-area-size 0x10000 -work-area-backup 0

#use combined on interfaces or targets that can't set TRST/SRST separately
reset_config trst_and_srst

$_TARGETNAME configure -event reset-init { xx_init }

jtag_nsrst_delay 200
jtag_ntrst_delay 0


proc xx_init { } {
	
#comment disable DDRC Bank

#comment DDRC: 32-bit mode, DDR SDRAM Module: 256Mb * 16
	mww 0x4000000C 0x000000A1
#comment DDRC: 32-bit mode, DDR SDRAM Module: 256Mb * 8
#comment setmem 0x4000000C, 0x00000061, 32

#comment DDRC: 32-bit mode, DDR SDRAM Module: 128Mb * 16
#comment setmem 0x4000000C, 0x00000091, 32

#comment configure DDRC timing parameter 0 register (0x009EEA88 for 256Mb DDR running at 125MHz)
#comment set 0x40000000 = 
#(0x2 << 22 + 0x0 << 21 + 0x3 << 19 + 0x3 << 17 + 0x3 << 14 + 0xA << 10 + 0x2 << 8 + 0x2 << 6 + 0x2 << 2)

	mww 0x40000000 0x009EEA88

#comment configure DDRC timing parameter 1 register (0x000083C5 for 256Mb DDR running at 125MHz)
#comment set 0x40000004 = (0x8 << 12 + 0x3C5)

	mww 0x40000004 0x000083C5
#comment setmem 0x40000004, 0x00008304, 32

#comment configure DDRC configuration register
#comment set 0x40000008 = (0x1)
	mww 0x40000008 0x00000001

#comment need to wait until ICMP bit become 1

#comment configure DDRC DQs output delay
	mww 0x40000014 0x00074444

#comment configure DDRC bank configuration register
#comment set 0x4000000C = (0x1 << 8 + 0x2 << 6 + 0x2 << 4 + 0x1)

#comment DDRC: 32-bit mode, DDR SDRAM Module: 256Mb * 16
	mww 0x4000000C 0x000001A1

#comment DDRC: 32-bit mode, DDR SDRAM Module: 256Mb * 8
#comment setmem 0x4000000C, 0x00000161, 32

#comment DDRC: 32-bit mode, DDR SDRAM Module: 128Mb * 16
#comment setmem 0x4000000C, 0x00000191, 32

#comment perform memory remap
	mww 0x76000000 0x1

#comment setting for SMC
#comment set SMC config register as follows: 
#comment bank enable, bank size = 8MByte, bank data width = 16Bit, disable write protect
	mww 0x30000000 0x10000031
#comment bank enable, bank size = 8MByte, bank data width = 16Bit, enable write protect
#comment setmem 0x30000000, 0x10000831, 32

#comment 1. Exit(Disable) PLL Power Down
#comment 2. Disable AHB and APB Clock Mask
#comment 3. Exit Power On Reset State
#comment -----------------------------------------------------------------------------------
	mww 0x77000010 0x0
	mww 0x77000000 0x0
	mww 0x77000004 0xFFFFFFFF
#comment -----------------------------------------------------------------------------------

# what to do?
}
