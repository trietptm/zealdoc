# ==========================================================================
# Build system
# ==========================================================================

netsvc.links: $(srctree)/applets/netsvc.mkll $(objtree)/include/autoconf.h $(srctree)/include/applets.h
	$(Q)-$(SHELL) $^ >$@

.PHONY: install
ifeq ($(CONFIG_INSTALL_APPLET_SYMLINKS),y)
INSTALL_OPTS:= --symlinks
endif
ifeq ($(CONFIG_INSTALL_APPLET_HARDLINKS),y)
INSTALL_OPTS:= --hardlinks
endif
ifeq ($(CONFIG_INSTALL_APPLET_SCRIPT_WRAPPERS),y)
ifeq ($(CONFIG_INSTALL_SH_APPLET_SYMLINK),y)
INSTALL_OPTS:= --sw-sh-sym
endif
ifeq ($(CONFIG_INSTALL_SH_APPLET_HARDLINK),y)
INSTALL_OPTS:= --sw-sh-hard
endif
ifeq ($(CONFIG_INSTALL_SH_APPLET_SCRIPT_WRAPPER),y)
INSTALL_OPTS:= --scriptwrapper
endif
endif
install: $(srctree)/applets/install.sh netsvc netsvc.links
	$(SHELL) $< $(CONFIG_PREFIX) $(INSTALL_OPTS)
ifeq ($(strip $(CONFIG_FEATURE_SUID)),y)
	@echo
	@echo
	@echo --------------------------------------------------
	@echo You will probably need to make your netsvc binary
	@echo setuid root to ensure all configured applets will
	@echo work properly.
	@echo --------------------------------------------------
	@echo
endif

uninstall: netsvc.links
	rm -f $(CONFIG_PREFIX)/bin/netsvc
	for i in `cat netsvc.links` ; do rm -f $(CONFIG_PREFIX)$$i; done

check test: netsvc netsvc.links
	bindir=$(objtree) srcdir=$(srctree)/testsuite SED="$(SED)" \
	$(SHELL) $(srctree)/testsuite/runtest $(if $(KBUILD_VERBOSE:0=),-v)

.PHONY: release
release: distclean
	cd ..; \
	rm -r -f netsvc-$(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION); \
	cp -a netsvc netsvc-$(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION) && { \
	find netsvc-$(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)/ -type d \
		-name .svn \
		-print \
		-exec rm -r -f {} \; ; \
	find netsvc-$(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)/ -type f \
		-name .\#* \
		-print \
		-exec rm -f {} \; ; \
	tar -czf netsvc-$(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION).tar.gz \
		netsvc-$(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)/ ; }

.PHONY: checkhelp
checkhelp:
	$(Q)$(srctree)/scripts/checkhelp.awk \
		$(patsubst %,$(srctree)/%,$(wildcard $(patsubst %,%/Kconfig,$(netsvc-dirs) ./)))

.PHONY: sizes
sizes: netsvc_unstripped
	$(NM) --size-sort $(<)

.PHONY: bloatcheck
bloatcheck: netsvc_old netsvc_unstripped
	@$(srctree)/scripts/bloat-o-meter netsvc_old netsvc_unstripped
	@$(CROSS_COMPILE)size netsvc_old netsvc_unstripped

.PHONY: baseline
baseline: netsvc_unstripped
	@mv netsvc_unstripped netsvc_old

.PHONY: objsizes
objsizes: netsvc_unstripped
	$(srctree)/scripts/objsizes

.PHONY: stksizes
stksizes: netsvc_unstripped
	$(CROSS_COMPILE)objdump -d netsvc_unstripped | $(srctree)/scripts/checkstack.pl $(ARCH) | uniq

.PHONY: bigdata
bigdata: netsvc_unstripped
	$(CROSS_COMPILE)nm --size-sort netsvc_unstripped | grep -vi ' [tr] '

# Documentation Targets
.PHONY: doc
doc: docs/netsvc.pod docs/netsvc.txt docs/netsvc.1 docs/netsvc.html

docs/netsvc.pod: $(srctree)/docs/netsvc_header.pod \
		$(srctree)/include/usage.h \
		$(srctree)/docs/netsvc_footer.pod \
		$(srctree)/docs/autodocifier.pl
	$(disp_doc)
	$(Q)-mkdir -p docs
	$(Q)-( cat $(srctree)/docs/netsvc_header.pod ; \
	    $(srctree)/docs/autodocifier.pl $(srctree)/include/usage.h ; \
	    cat $(srctree)/docs/netsvc_footer.pod ; ) > docs/netsvc.pod

docs/netsvc.txt: docs/netsvc.pod
	$(disp_doc)
	$(Q)-mkdir -p docs
	$(Q)-pod2text $< > $@

docs/netsvc.1: docs/netsvc.pod
	$(disp_doc)
	$(Q)-mkdir -p docs
	$(Q)-pod2man --center=netsvc --release="version $(VERSION)" \
		$< > $@

docs/netsvc.html: docs/netsvc.net/netsvc.html
	$(disp_doc)
	$(Q)-mkdir -p docs
	$(Q)-rm -f docs/netsvc.html
	$(Q)-cp docs/netsvc.net/netsvc.html docs/netsvc.html

docs/netsvc.net/netsvc.html: docs/netsvc.pod
	$(Q)-mkdir -p docs/netsvc.net
	$(Q)-pod2html --noindex $< > \
	    docs/netsvc.net/netsvc.html
	$(Q)-rm -f pod2htm*

# documentation, cross-reference
# Modern distributions already ship synopsis packages (e.g. debian)
# If you have an old distribution go to http://synopsis.fresco.org/
syn_tgt = $(wildcard $(patsubst %,%/*.c,$(netsvc-alldirs)))
syn     = $(patsubst %.c, %.syn, $(syn_tgt))

comma:= ,
brace_open:= (
brace_close:= )

SYN_CPPFLAGS := $(strip $(CPPFLAGS) $(EXTRA_CPPFLAGS))
SYN_CPPFLAGS := $(subst $(brace_open),\$(brace_open),$(SYN_CPPFLAGS))
SYN_CPPFLAGS := $(subst $(brace_close),\$(brace_close),$(SYN_CPPFLAGS))
#SYN_CPPFLAGS := $(subst ",\",$(SYN_CPPFLAGS))
#")
#SYN_CPPFLAGS := [$(patsubst %,'%'$(comma),$(SYN_CPPFLAGS))'']

%.syn: %.c
	synopsis -p C -l Comments.SSDFilter,Comments.Previous -Wp,preprocess=True,cppflags="'$(SYN_CPPFLAGS)'" -o $@ $<

.PHONY: html
html: $(syn)
	synopsis -f HTML -Wf,title="'NetSvc Documentation'" -o $@ $^

-include $(srctree)/Makefile.local
